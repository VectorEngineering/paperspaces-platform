---
description: Add environment variable
globs:
alwaysApply: false
---
# Environment Variables

This is how we add environment variables to the project:

  1. Add to `.env.example`:
      ```bash
      NEW_VARIABLE=value_example
      ```

  2. Add to `apps/web/env.ts`:
      ```typescript
      // For server-only variables
      server: {
        NEW_VARIABLE: z.string(),
      }
      // For client-side variables
      client: {
        NEXT_PUBLIC_NEW_VARIABLE: z.string(),
      }
      experimental__runtimeEnv: {
        NEXT_PUBLIC_NEW_VARIABLE: process.env.NEXT_PUBLIC_NEW_VARIABLE,
      }
      ```

  3. For client-side variables:
      - Must be prefixed with `NEXT_PUBLIC_`
      - Add to both `client` and `experimental__runtimeEnv` sections

  4. Add to `turbo.json` under `globalDependencies`:
      ```json
      {
        "tasks": {
          "build": {
            "env": [
              "NEW_VARIABLE"
            ]
          }
        }
      }
      ```

examples:
  - input: |
      # Adding a server-side API key
      # .env.example
      API_KEY=your_api_key_here

      # env.ts
      server: {
        API_KEY: z.string(),
      }

      # turbo.json
      "build": {
        "env": ["API_KEY"]
      }
    output: "Server-side environment variable properly added"

  - input: |
      # Adding a client-side feature flag
      # .env.example
      NEXT_PUBLIC_FEATURE_ENABLED=false

      # env.ts
      client: {
        NEXT_PUBLIC_FEATURE_ENABLED: z.coerce.boolean().default(false),
      },
      experimental__runtimeEnv: {
        NEXT_PUBLIC_FEATURE_ENABLED: process.env.NEXT_PUBLIC_FEATURE_ENABLED,
      }

      # turbo.json
      "build": {
        "env": ["NEXT_PUBLIC_FEATURE_ENABLED"]
      }
    output: "Client-side environment variable properly added"

references:
  - apps/web/env.ts
  - apps/web/.env.example
  - turbo.json

# Environment Variables in Documenso

## Environment Variable Structure

Documenso uses prefixed environment variables:
- `NEXT_PUBLIC_` - Available in both client and server code
- `NEXT_PRIVATE_` - Only available in server code

## Categories of Environment Variables

### Authentication
```
# Required: Secret for NextAuth
NEXTAUTH_SECRET="secret"

# Optional: OAuth providers
NEXT_PRIVATE_GOOGLE_CLIENT_ID=""
NEXT_PRIVATE_GOOGLE_CLIENT_SECRET=""

NEXT_PRIVATE_OIDC_WELL_KNOWN=""
NEXT_PRIVATE_OIDC_CLIENT_ID=""
NEXT_PRIVATE_OIDC_CLIENT_SECRET=""
NEXT_PRIVATE_OIDC_PROVIDER_LABEL="OIDC"
NEXT_PRIVATE_OIDC_SKIP_VERIFY=""
```

### URL Configuration
```
NEXT_PUBLIC_WEBAPP_URL="http://localhost:3000"
NEXT_PRIVATE_INTERNAL_WEBAPP_URL="http://localhost:3000"
```

### Database
```
NEXT_PRIVATE_DATABASE_URL="postgres://documenso:password@127.0.0.1:54320/documenso"
NEXT_PRIVATE_DIRECT_DATABASE_URL="postgres://documenso:password@127.0.0.1:54320/documenso"
```

### Document Signing
```
# The transport to use for document signing. Available options: local (default) | gcloud-hsm
NEXT_PRIVATE_SIGNING_TRANSPORT="local"

# Optional: Local signing configuration
NEXT_PRIVATE_SIGNING_PASSPHRASE=
NEXT_PRIVATE_SIGNING_LOCAL_FILE_PATH=
NEXT_PRIVATE_SIGNING_LOCAL_FILE_CONTENTS=

# Optional: Google Cloud HSM configuration
NEXT_PRIVATE_SIGNING_GCLOUD_HSM_KEY_PATH=
NEXT_PRIVATE_SIGNING_GCLOUD_HSM_PUBLIC_CRT_FILE_PATH=
NEXT_PRIVATE_SIGNING_GCLOUD_HSM_PUBLIC_CRT_FILE_CONTENTS=
NEXT_PRIVATE_SIGNING_GCLOUD_APPLICATION_CREDENTIALS_CONTENTS=
```

### Storage
```
# Optional: Defines the storage transport to use. Available options: database (default) | s3
NEXT_PUBLIC_UPLOAD_TRANSPORT="database"

# Optional: S3 configuration
NEXT_PRIVATE_UPLOAD_ENDPOINT="http://127.0.0.1:9002"
NEXT_PRIVATE_UPLOAD_FORCE_PATH_STYLE="false"
NEXT_PRIVATE_UPLOAD_REGION="unknown"
NEXT_PRIVATE_UPLOAD_BUCKET="documenso"
NEXT_PRIVATE_UPLOAD_ACCESS_KEY_ID="documenso"
NEXT_PRIVATE_UPLOAD_SECRET_ACCESS_KEY="password"
```

### Email (SMTP)
```
# Optional: Defines the transport to use for sending emails. Available options: smtp-auth (default) | smtp-api | mailchannels
NEXT_PRIVATE_SMTP_TRANSPORT="smtp-auth"
NEXT_PRIVATE_SMTP_HOST="127.0.0.1"
NEXT_PRIVATE_SMTP_PORT=2500
NEXT_PRIVATE_SMTP_USERNAME="documenso"
NEXT_PRIVATE_SMTP_PASSWORD="password"

# Required: Email configuration
NEXT_PRIVATE_SMTP_FROM_NAME="Documenso"
NEXT_PRIVATE_SMTP_FROM_ADDRESS="noreply@documenso.com"

# Optional: Resend.com integration
NEXT_PRIVATE_RESEND_API_KEY=
```

## Adding a New Environment Variable

1. Add the variable to the `.env.example` file with a comment explaining its purpose
2. Add the variable to the `.env` file for local development
3. Update documentation if necessary
4. Add the variable to deployment configurations (render.yaml, railway.toml, etc.)
5. Use the variable in code with proper type checking

## Using Environment Variables

For server-only code:
```typescript
// Server component or server action
import { env } from '@documenso/env';

// Access server-only variable
const apiKey = env.NEXT_PRIVATE_RESEND_API_KEY;
```

For client-side code:
```typescript
// Client component
import { env } from '@documenso/env/client';

// Access public variable
const uploadTransport = env.NEXT_PUBLIC_UPLOAD_TRANSPORT;
```
