---
description: Guidelines for implementing GET API routes in Next.js
globs:
alwaysApply: false
---
# GET API Routes in Documenso

## Route Structure
API routes should be placed in the `apps/remix/app/api` directory.

Example structure for a document API route:
```
apps/remix/app/api/documents/[id]/route.ts
```

## Basic Implementation
```typescript
// apps/remix/app/api/documents/[id]/route.ts
import { NextRequest, NextResponse } from 'next/server';
import { z } from 'zod';

import { getAPISession } from '@documenso/app-auth/get-session';
import { prisma } from '@documenso/prisma';

export async function GET(
  req: NextRequest,
  { params }: { params: { id: string } }
) {
  try {
    // Get the user session
    const { session } = await getAPISession();

    if (!session) {
      return NextResponse.json(
        { error: 'Unauthorized' },
        { status: 401 }
      );
    }

    const { id } = params;

    // Fetch document
    const document = await prisma.document.findUnique({
      where: {
        id,
        userId: session.user.id,
      },
      include: {
        fields: true,
        recipients: true,
      },
    });

    if (!document) {
      return NextResponse.json(
        { error: 'Document not found' },
        { status: 404 }
      );
    }

    return NextResponse.json({ document });
  } catch (error) {
    console.error('Error fetching document:', error);

    return NextResponse.json(
      { error: 'Internal server error' },
      { status: 500 }
    );
  }
}
```

## Best Practices
1. **Authentication**: Always check the user session
2. **Error Handling**: Return appropriate status codes and error messages
3. **Validation**: Validate any request parameters or query strings
4. **Response Format**: Return consistently structured responses
5. **Performance**: Optimize database queries by selecting only needed fields
6. **Security**: Validate user permissions before returning data
